(define (problem clean-decking_0)
    (:domain omnigibson)

    (:objects
        board.n.02_1 - board.n.02
        floor.n.01_1 - floor.n.01
        entire_leaf.n.01_1 entire_leaf.n.01_2 entire_leaf.n.01_3 entire_leaf.n.01_4 entire_leaf.n.01_5 - entire_leaf.n.01
        mud.n.01_1 - mud.n.01
        fence.n.01_1 - fence.n.01
        watering_can.n.01_1 - watering_can.n.01
        liquid_soap.n.01_1 - liquid_soap.n.01
        liquid_soap__bottle.n.01_1 - liquid_soap__bottle.n.01
        bleaching_agent.n.01_1 - bleaching_agent.n.01
        bleaching_agent__bottle.n.01_1 - bleaching_agent__bottle.n.01
        bin.n.01_1 - bin.n.01
        water.n.06_1 - water.n.06
        scrub_brush.n.01_1 - scrub_brush.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop board.n.02_1 floor.n.01_1) 
        (ontop entire_leaf.n.01_1 board.n.02_1) 
        (ontop entire_leaf.n.01_2 board.n.02_1) 
        (ontop entire_leaf.n.01_3 board.n.02_1) 
        (ontop entire_leaf.n.01_4 board.n.02_1) 
        (ontop entire_leaf.n.01_5 board.n.02_1) 
        (ontop watering_can.n.01_1 floor.n.01_1) 
        (filled liquid_soap__bottle.n.01_1 liquid_soap.n.01_1) 
        (ontop liquid_soap__bottle.n.01_1 floor.n.01_1)
        (filled bleaching_agent__bottle.n.01_1 bleaching_agent.n.01_1) 
        (ontop bleaching_agent__bottle.n.01_1 floor.n.01_1)
        (covered board.n.02_1 mud.n.01_1)
        (insource watering_can.n.01_1 water.n.06_1) 
        (ontop scrub_brush.n.01_1 floor.n.01_1) 
        (ontop bin.n.01_1 floor.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1) 
        (inroom floor.n.01_1 garden) 
        (inroom fence.n.01_1 garden) 
    )
    
    (:goal 
        (and 
            (forall 
                (?entire_leaf.n.01 - entire_leaf.n.01)
                (inside ?entire_leaf.n.01 ?bin.n.01_1)
            )
            (covered ?board.n.02_1 ?bleaching_agent.n.01_1)
            (not 
                (covered ?board.n.02_1 ?mud.n.01_1)
            )
            (ontop ?board.n.02_1 ?floor.n.01_1)
        )
    )
)