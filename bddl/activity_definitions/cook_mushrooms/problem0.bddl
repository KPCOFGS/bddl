(define (problem cook_mushrooms-0)
    (:domain omnigibson)

    (:objects
     	mushroom.n.05_1 - mushroom.n.05
    	bowl.n.01_1 - bowl.n.01
    	stove.n.01_1 - stove.n.01
    	frying_pan.n.01_1 - frying_pan.n.01
    	floor.n.01_1 - floor.n.01
    	agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop mushroom.n.05_1 bowl.n.01_1) 
        (touching bowl.n.01_1 stove.n.01_1) 
        (ontop frying_pan.n.01_1 stove.n.01_1) 
        (not 
            (cooked mushroom.n.05_1)
        ) 
        (inroom stove.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?mushroom.n.05 - mushroom.n.05) 
                (ontop ?mushroom.n.05 ?frying_pan.n.01_1)
            ) 
            (forall 
                (?bowl.n.01 - bowl.n.01) 
                (nextto ?bowl.n.01 ?stove.n.01_1)
            ) 
            (forall 
                (?frying_pan.n.01 - frying_pan.n.01) 
                (ontop ?frying_pan.n.01 ?stove.n.01_1)
            ) 
            (forall 
                (?mushroom.n.05 - mushroom.n.05) 
                (cooked ?mushroom.n.05)
            )
        )
    )
)