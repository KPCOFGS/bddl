(define (problem buying-everyday-consumer-goods_0)
    (:domain omnigibson)

    (:objects
        cash_register.n.01_1 - cash_register.n.01
        checkout.n.03_1 - checkout.n.03
        credit_card.n.01_1 - credit_card.n.01
        dairy.n.01_1 dairy.n.01_2 - dairy.n.01
        shelf.n.01_1 shelf.n.01_2 shelf.n.01_3 - shelf.n.01
        produce.n.01_1 produce.n.01_2 produce.n.01_3 - produce.n.01
        sack.n.01_1 sack.n.01_2 - sack.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop cash_register.n.01_1 checkout.n.03_1) 
        (closed cash_register.n.01_1) 
        (ontop credit_card.n.01_1 checkout.n.03_1) 
        (ontop dairy.n.01_1 shelf.n.01_1) 
        (ontop dairy.n.01_2 shelf.n.01_1) 
        (ontop produce.n.01_1 shelf.n.01_2) 
        (ontop produce.n.01_2 shelf.n.01_2) 
        (ontop produce.n.01_3 shelf.n.01_3) 
        (ontop sack.n.01_1 checkout.n.03_1) 
        (ontop sack.n.01_2 checkout.n.03_1) 
        (inroom floor.n.01_1 grocery_store) 
        (inroom shelf.n.01_1 grocery_store) 
        (inroom shelf.n.01_2 grocery_store) 
        (inroom shelf.n.01_3 grocery_store) 
        (inroom checkout.n.03_1 grocery_store) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (nextto ?credit_card.n.01_1 ?cash_register.n.01_1) 
            (exists 
                (?sack.n.01 - sack.n.01) 
                (forall 
                    (?dairy.n.01 - dairy.n.01)
                    (inside ?dairy.n.01 ?sack.n.01)
                )
            ) 
            (exists 
                (?sack.n.01 - sack.n.01) 
                (forall 
                    (?produce.n.01 - produce.n.01)
                    (inside ?produce.n.01 ?sack.n.01)
                )
            )
            (forall
                (?produce.n.01 - produce.n.01)
                (forall 
                    (?dairy.n.01 - dairy.n.01)
                    (not 
                        (nextto ?produce.n.01 ?dairy.n.01)
                    )
                )
            )
        )
    )
)