(define (problem toast-coconut_0)
    (:domain omnigibson)

    (:objects
        coconut.n.01_1 - coconut.n.01
        frying_pan.n.01_1 - frying_pan.n.01
        stove.n.01_1 - stove.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside coconut.n.01_1 frying_pan.n.01_1) 
        (ontop frying_pan.n.01_1 stove.n.01_1) 
        (not 
            (hot coconut.n.01_1)
        ) 
        (not 
            (cooked coconut.n.01_1)
        )
        (inroom stove.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (hot ?coconut.n.01_1) 
            (cooked ?coconut.n.01_1)
        )
    )
)