(define (problem packing-meal-for-delivery_0)
    (:domain omnigibson)

    (:objects
        sandwich.n.01_1 sandwich.n.01_2 sandwich.n.01_3 sandwich.n.01_4 - sandwich.n.01
        kitchen_table.n.01_1 - kitchen_table.n.01
        backpack.n.01_1 - backpack.n.01
        sack.n.01_1 sack.n.01_2 sack.n.01_3 sack.n.01_4 - sack.n.01
        floor.n.01_1 - floor.n.01
        oven.n.01_1 - oven.n.01
        cabinet.n.01_1 - cabinet.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        window.n.01_1 - window.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (cooked sandwich.n.01_1) 
        (cooked sandwich.n.01_2) 
        (cooked sandwich.n.01_3) 
        (cooked sandwich.n.01_4) 
        (ontop sandwich.n.01_1 kitchen_table.n.01_1) 
        (ontop sandwich.n.01_2 kitchen_table.n.01_1) 
        (ontop sandwich.n.01_3 kitchen_table.n.01_1) 
        (ontop sandwich.n.01_4 kitchen_table.n.01_1) 
        (ontop backpack.n.01_1 kitchen_table.n.01_1) 
        (ontop sack.n.01_1 kitchen_table.n.01_1)
        (ontop sack.n.01_2 kitchen_table.n.01_1)
        (ontop sack.n.01_3 kitchen_table.n.01_1)
        (ontop sack.n.01_4 kitchen_table.n.01_1)
        (inroom floor.n.01_1 kitchen) 
        (inroom oven.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom window.n.01_1 kitchen) 
        (inroom kitchen_table.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forpairs
                (?sandwich.n.01 - sandwich.n.01)
                (?sack.n.01 - sack.n.01)
                (inside ?sandwich.n.01 ?sack.n.01)
            )
            (forall 
                (?sack.n.01 - sack.n.01)
                (inside ?sack.n.01 ?backpack.n.01_1)
            )
        )
    )
)
