(define (problem cook-ham-hocks_1)
    (:domain omnigibson)

    (:objects
     	stockpot.n.01_1 - stockpot.n.01
    	oven.n.01_1 - oven.n.01
    	chicken_broth.n.01_1 - chicken_broth.n.01
    	chicken_broth__carton.n.01_1 - chicken_broth__carton.n.01
    	ham_hock.n.01_1 - ham_hock.n.01
    	salt.n.02_1 - salt.n.02
    	floor.n.01_1 - floor.n.01
    	agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop stockpot.n.01_1 oven.n.01_1) 
        (covered chicken_broth__carton.n.01_1 chicken_broth.n.01_1) 
        (ontop chicken_broth__carton.n.01_1 oven.n.01_1) 
        (ontop ham_hock.n.01_1 stockpot.n.01_1) 
        (covered ham_hock.n.01_1 salt.n.02_1) 
        (not 
            (cooked ham_hock.n.01_1)
        ) 
        (inroom oven.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?chicken_broth__carton.n.01 - chicken_broth__carton.n.01) 
                (ontop ?chicken_broth__carton.n.01 ?oven.n.01_1)
            ) 
            (forall 
                (?chicken_broth.n.01 - chicken_broth.n.01) 
                (covered ?ham_hock.n.01_1 ?chicken_broth.n.01)
            ) 
            (forall 
                (?stockpot.n.01 - stockpot.n.01) 
                (ontop ?stockpot.n.01 ?oven.n.01_1)
            ) 
            (forall 
                (?ham_hock.n.01 - ham_hock.n.01) 
                (ontop ?ham_hock.n.01 ?stockpot.n.01_1)
            ) 
            (forall 
                (?salt.n.02 - salt.n.02) 
                (covered ?ham_hock.n.01_1 ?salt.n.02)
            ) 
            (forall 
                (?ham_hock.n.01 - ham_hock.n.01) 
                (cooked ?ham_hock.n.01)
            )
        )
    )
)