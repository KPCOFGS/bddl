(define (problem putting-clothes-in-storage_1)
    (:domain omnigibson)

    (:objects
     	carton.n.02_1 carton.n.02_2 carton.n.02_3 - carton.n.02
    	floor.n.01_1 - floor.n.01
    	coat.n.01_1 coat.n.01_2 - coat.n.01
    	trouser.n.01_1 trouser.n.01_2 - trouser.n.01
    	shirt.n.01_1 shirt.n.01_2 - shirt.n.01
    	wall.n.01_1 - wall.n.01
    	agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop carton.n.02_1 floor.n.01_1) 
        (ontop carton.n.02_2 floor.n.01_1) 
        (ontop carton.n.02_3 floor.n.01_1) 
        (ontop coat.n.01_1 floor.n.01_1) 
        (ontop coat.n.01_2 floor.n.01_1) 
        (ontop trouser.n.01_1 floor.n.01_1) 
        (ontop trouser.n.01_2 floor.n.01_1) 
        (ontop shirt.n.01_1 floor.n.01_1) 
        (ontop shirt.n.01_2 floor.n.01_1) 
        (inroom floor.n.01_1 storage_room) 
        (inroom wall.n.01_1 storage_room) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?coat.n.01 - coat.n.01) 
                (ontop ?coat.n.01 ?carton.n.02_1)
            ) 
            (forall 
                (?trouser.n.01 - trouser.n.01) 
                (ontop ?trouser.n.01 ?carton.n.02_2)
            ) 
            (forall 
                (?shirt.n.01 - shirt.n.01) 
                (ontop ?shirt.n.01 ?carton.n.02_3)
            ) 
            (or 
                (exists 
                    (?coat.n.01 - coat.n.01) 
                    (not 
                        (ontop ?coat.n.01 ?floor.n.01_1)
                    )
                ) 
                (exists 
                    (?trouser.n.01 - trouser.n.01) 
                    (not 
                        (ontop ?trouser.n.01 ?floor.n.01_1)
                    )
                ) 
                (exists 
                    (?shirt.n.01 - shirt.n.01) 
                    (not 
                        (ontop ?shirt.n.01 ?floor.n.01_1)
                    )
                )
            )
        )
    )
)