(define (problem make-fish-stock_0)
    (:domain omnigibson)

    (:objects
        fish.n.02_1 - fish.n.02
        water.n.06_1 - water.n.06
        red_wine.n.01_1 - red_wine.n.01
        vegetable.n.01_1 - vegetable.n.01
        broth.n.01_1 - broth.n.01
        sieve.n.01_1 - sieve.n.01
        stockpot.n.01_1 - stockpot.n.01
        chopping_board.n.01_1 chopping_board.n.01_2 - chopping_board.n.01
        countertop.n.01_1 countertop.n.01_2 - countertop.n.01
        sink.n.01_1 - sink.n.01
        wine_bottle.n.01_1 - wine_bottle.n.01
    )

    (:init
        (ontop fish.n.02_1 chopping_board.n.01_1)
        (ontop chopping_board.n.01_1 countertop.n.01_1)
        (filled wine_bottle.n.01_1 red_wine.n.01_1)
        (ontop wine_bottle.n.01_1 countertop.n.01_1)
        (ontop vegetable.n.01_1 chopping_board.n.01_2)
        (ontop chopping_board.n.01_2 countertop.n.01_1)
        (ontop sieve.n.01_1 countertop.n.01_1)
        (ontop stockpot.n.01_1 countertop.n.01_2)
        (insource sink.n.01_1 water.n.06_1)
        (inroom sink.n.01_1 kitchen)
        (inroom countertop.n.01_1 kitchen)
        (inroom countertop.n.01_2 kitchen)
        (future broth.n.01_1)
    )

    (:goal
        (and
            (real ?broth.n.01_1)
            (filled ?stockpot.n.01_1 ?broth.n.01_1)
        )
    )
)